{"dependencies":[{"name":"react"},{"name":"react-dom"},{"name":"semantic-ui-react"},{"name":"semantic-ui-css/semantic.min.css"}],"generated":{"js":"\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _semanticUiReact = require(\"semantic-ui-react\");\n\nrequire(\"semantic-ui-css/semantic.min.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SetCalculator = function (_React$Component) {\n  _inherits(SetCalculator, _React$Component);\n\n  function SetCalculator() {\n    _classCallCheck(this, SetCalculator);\n\n    var _this = _possibleConstructorReturn(this, (SetCalculator.__proto__ || Object.getPrototypeOf(SetCalculator)).call(this));\n\n    _this.state = {\n      weight: 0,\n      week: \"5\"\n    };\n    _this.weightInput = null;\n    _this.weekInput = null;\n    return _this;\n  }\n\n  _createClass(SetCalculator, [{\n    key: \"getCalcs\",\n    value: function getCalcs(week) {\n      var percentages = [];\n      var sets = [];\n      switch (week) {\n        case \"5\":\n          percentages = [0.4, 0.5, 0.6, 0.65, 0.75, 0.85];\n          sets = [5, 5, 3, 5, 5, \"5+\"];\n          break;\n        case \"3\":\n          percentages = [0.4, 0.5, 0.6, 0.7, 0.8, 0.9];\n          sets = [5, 5, 3, 3, 3, \"5+\"];\n          break;\n        case \"1\":\n          percentages = [0.4, 0.5, 0.6, 0.85, 0.925, 1];\n          sets = [5, 5, 3, 5, 3, \"1+\"];\n          break;\n        case \"D\":\n          percentages = [0.4, 0.5, 0.6];\n          sets = [5, 5, 5];\n          break;\n        default:\n          break;\n      }\n      return { percentages: percentages, sets: sets };\n    }\n  }, {\n    key: \"round5\",\n    value: function round5(val) {\n      return Math.ceil(val / 5) * 5;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        weight: this.weightInput.inputRef.value\n      });\n    }\n  }, {\n    key: \"calcPlates\",\n    value: function calcPlates(totalWeight) {\n      var plates = [{ weight: 45, count: 8 }, { weight: 35, count: 4 }, { weight: 25, count: 4 }, { weight: 10, count: 4 }, { weight: 5, count: 4 }, { weight: 2.5, count: 4 }, { weight: 1.25, count: 4 }, { weight: 0.5, count: 8 }];\n      var bar = 45;\n      if (totalWeight <= bar) {\n        return ['no plates'];\n      }\n      var oneSide = (totalWeight - bar) / 2;\n      var result = [];\n      for (var i = 0; i < plates.length; i++) {\n        var plate = plates[i];\n        if (oneSide < plate.weight) {\n          continue;\n        } else {\n          var count = 0;\n          var available = plate.count;\n          while (count < Math.floor(oneSide / plate.weight)) {\n            count++;\n            result.push(plate.weight);\n          }\n          oneSide = oneSide % plate.weight;\n        }\n      };\n      return \"[\" + result.join(', ') + \"]\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _getCalcs = this.getCalcs(this.state.week),\n          percentages = _getCalcs.percentages,\n          sets = _getCalcs.sets;\n\n      return _react2.default.createElement(\n        _semanticUiReact.Container,\n        null,\n        _react2.default.createElement(_semanticUiReact.Input, { onChange: this.onChange.bind(this), ref: function ref(el) {\n            return _this2.weightInput = el;\n          }, placeholder: \"enter weight!\" }),\n        _react2.default.createElement(\n          _semanticUiReact.Button.Group,\n          null,\n          _react2.default.createElement(\n            _semanticUiReact.Button,\n            { active: this.state.week === '5', onClick: function onClick() {\n                return _this2.setState({ week: \"5\" });\n              } },\n            \"Five\"\n          ),\n          _react2.default.createElement(\n            _semanticUiReact.Button,\n            { active: this.state.week === '3', onClick: function onClick() {\n                return _this2.setState({ week: \"3\" });\n              } },\n            \"Three\"\n          ),\n          _react2.default.createElement(\n            _semanticUiReact.Button,\n            { active: this.state.week === '1', onClick: function onClick() {\n                return _this2.setState({ week: \"1\" });\n              } },\n            \"One\"\n          ),\n          _react2.default.createElement(\n            _semanticUiReact.Button,\n            { active: this.state.week === 'D', onClick: function onClick() {\n                return _this2.setState({ week: \"D\" });\n              } },\n            \"Deload\"\n          )\n        ),\n        this.state.weight ? _react2.default.createElement(\n          \"div\",\n          null,\n          _react2.default.createElement(\n            _semanticUiReact.Table,\n            { celled: true },\n            _react2.default.createElement(\n              _semanticUiReact.Table.Header,\n              null,\n              _react2.default.createElement(\n                _semanticUiReact.Table.Row,\n                null,\n                _react2.default.createElement(\n                  _semanticUiReact.Table.HeaderCell,\n                  null,\n                  \"Weight\"\n                ),\n                _react2.default.createElement(\n                  _semanticUiReact.Table.HeaderCell,\n                  null,\n                  \"Reps\"\n                ),\n                _react2.default.createElement(\n                  _semanticUiReact.Table.HeaderCell,\n                  null,\n                  \"Plates\"\n                )\n              )\n            ),\n            _react2.default.createElement(\n              _semanticUiReact.Table.Body,\n              null,\n              percentages.map(function (p, i) {\n                var w = _this2.round5(_this2.state.weight * p);\n                return _react2.default.createElement(\n                  _semanticUiReact.Table.Row,\n                  { key: i },\n                  _react2.default.createElement(\n                    _semanticUiReact.Table.Cell,\n                    null,\n                    w\n                  ),\n                  _react2.default.createElement(\n                    _semanticUiReact.Table.Cell,\n                    null,\n                    sets[i]\n                  ),\n                  _react2.default.createElement(\n                    _semanticUiReact.Table.Cell,\n                    null,\n                    _this2.calcPlates(w)\n                  )\n                );\n              })\n            )\n          )\n        ) : null\n      );\n    }\n  }]);\n\n  return SetCalculator;\n}(_react2.default.Component);\n\n_reactDom2.default.render(_react2.default.createElement(SetCalculator, null), document.getElementById('app'));"},"hash":"2eecd5ef9c52c9cdbfa98a4f4fa279ef"}